#test name: module-install
#
# specify one module in packages section twice with different streams
#
# expected result
# - crash ?
# - if no crash the I guess the last seen module spec
#   (we forward the specs to DNF in order), anything else
#   would be black magic

%ksappend repos/default.ks
%ksappend common/common_no_payload.ks

%packages
@^Fedora Server Edition
# lets use a no-default profile to see if it is correctly set afterwards
@avocado:latest/default
@avocado:stable/default
kernel
vim
%end

%post
# modules have some packages defined as their API in their profiles,
# we can check for those to be (or not to be installed) to see if the
# module has (or has not) been installed

# the vim standalone package
rpm -q vim-minimal
if [[ $? != 0 ]]; then
    echo '*** vim-minimal package requested but not installed' >> /root/RESULT
fi

# it is also nice to have kernel
rpm -q kernel
if [[ $? != 0 ]]; then
    echo '*** kernel package not installed' >> /root/RESULT
fi

rpm -q python2-avocado
if [[ $? != 0 ]]; then
    echo '*** python2-avocado package for avocado module not installed' >> /root/RESULT
fi

# next we will check if the module is seen as enabled/installed from the
# metadata/DNF point of view
dnf module list --enabled avocado | grep avocado || echo "*** avocado module not marked as enabled" >> /root/RESULT
dnf module list --installed avocado | grep avocado || echo "*** avocado module not marked as installed" >> /root/RESULT

# check the stream
dnf module list --installed avocado | grep "default \[i\]" || echo "*** avocado module default profile not marked as installed" >> /root/RESULT

# check the stream
dnf module list --installed avocado | grep "stable \[e\]" || echo "*** avocado stream stable not marked as enabled" >> /root/RESULT

%ksappend validation/success_if_result_empty.ks

%end
