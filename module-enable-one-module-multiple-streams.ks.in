#test name: module-install
#
# try enabling one module multiple times
# - with diferent stream specififcations
#
# current expected behavior
# - fails with traceback when the module command is being processed
#
# dnf.module.exception.NoModuleException: No such module: nodejs:8
#
# - it's always nodejs:8 regardless of the order of module command ordering

url @KSTEST_URL@
repo --name=modular @KSTEST_MODULAR_URL@

install
network --bootproto=dhcp

bootloader --timeout=1
zerombr
clearpart --all
autopart

keyboard us
lang en
timezone America/New_York
rootpw qweqwe
shutdown

module --name=nodejs --stream=10
module --name=nodejs --stream=8

%packages
@^Fedora Server Edition
# lets use a no-default profile to see if it is correctly set afterwards
kernel
vim
%end

%post
# modules have some packages defined as their API in their profiles,
# we can check for those to be (or not to be installed) to see if the
# module has (or has not) been installed

# the vim standalone package
rpm -q vim-minimal
if [[ $? != 0 ]]; then
    echo '*** vim-minimal package requested but not installed' >> /root/RESULT
fi

# it is also nice to have kernel
rpm -q kernel
if [[ $? != 0 ]]; then
    echo '*** kernel package not installed' >> /root/RESULT
fi

# the nodejs module should be just enabled, so the API package should *not*
# be installed

rpm -q nodejs
if [[ $? == 0 ]]; then
    echo '*** nodejs package for nodejs module installed (module should be only enabled)' >> /root/RESULT
fi

# next we will check if the module is seen as enabled/installed from the
# metadata/DNF point of view
dnf module list --enabled nodejs | grep nodejs || echo "*** nodejs module not marked as enabled" >> /root/RESULT
dnf module list --installed nodejs | grep nodejs && echo "*** nodejs module marked as installed (should be just enabled)" >> /root/RESULT

# check the stream
dnf module list --enabled nodejs | grep "8 \[e\]" || echo "*** nodejs stream id 8 not marked as enabled" >> /root/RESULT

if [ ! -f /root/RESULT ]
then
    # no result file (no errors) -> success
    echo SUCCESS > /root/RESULT
else
    # some errors happened
    exit 1
fi

%end
