#test name: team-pre
url @KSTEST_URL@
install

%include /tmp/ksinclude
%pre
echo "network --device team0 --bootproto dhcp --teamslaves=\"ens4'{\\\"prio\\\": -10, \\\"sticky\\\": true}',ens5'{\\\"prio\\\": 100}'\" --teamconfig=\"{\\\"runner\\\": {\\\"name\\\": \\\"activebackup\\\"}}\" --activate" >> /tmp/ksinclude
echo 'network --device team1 --bootproto dhcp --teamslaves=ens6,ens7 --teamconfig="{\"runner\": {\"name\": \"roundrobin\"}}"' >> /tmp/ksinclude
%end

bootloader --timeout=1
zerombr
clearpart --all
autopart

keyboard us
lang en
timezone America/New_York
rootpw qweqwe
shutdown

%packages
%end

%post

function check_device_ifcfg_value() {
    local nic="$1"
    local key="$2"
    local value="$3"
    local ifcfg_file="/etc/sysconfig/network-scripts/ifcfg-${nic}"

    if [[ -e ${ifcfg_file} ]]; then
        egrep -q '^'${key}'="?'${value}'"?$' ${ifcfg_file}
        if [[ $? -ne 0 ]]; then
           echo "*** unexpected ${key} value in ${ifcfg_file}" >> /root/RESULT
        fi
    else
       echo "*** ifcfg file ${ifcfg_file} missing" >> /root/RESULT
    fi
}

function check_device_connected() {
    local nic="$1"
    local expected_result="$2"
    local exit_code=0
    if [[ ${expected_result} == "no" ]]; then
        exit_code=1
    fi

    nmcli -t -f DEVICE,STATE dev | grep "${nic}:connected"
    if [[ $? -ne ${exit_code} ]]; then
        echo "*** Device ${nic} connected:${expected_result} check failed" >> /root/RESULT
    fi
}


check_device_ifcfg_value team0 ONBOOT no
check_device_ifcfg_value team0_slave_1 ONBOOT no
check_device_ifcfg_value team0_slave_2 ONBOOT no
check_device_connected team0 yes

check_device_ifcfg_value team1 ONBOOT yes
check_device_ifcfg_value team1_slave_1 ONBOOT yes
check_device_ifcfg_value team1_slave_2 ONBOOT yes
check_device_connected team1 no

# No error was written to /root/RESULT file, everything is OK
if [[ ! -e /root/RESULT ]]; then
   echo SUCCESS > /root/RESULT
fi
%end
