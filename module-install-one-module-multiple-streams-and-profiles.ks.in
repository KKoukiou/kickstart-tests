#test name: module-install
#
# specify one module in packages section twice with different streams & profiles
#
# expected result
# - ?

%ksappend repos/default.ks
%ksappend common/common_no_payload.ks

%packages
# lets use a no-default profile to see if it is correctly set afterwards
@cri-o:2018.0/default
@cri-o:1.11/default
kernel
vim
%end

%post
# modules have some packages defined as their API in their profiles,
# we can check for those to be (or not to be installed) to see if the
# module has (or has not) been installed

# the vim standalone package
rpm -q vim-minimal
if [[ $? != 0 ]]; then
    echo '*** vim-minimal package requested but not installed' >> /root/RESULT
fi

# it is also nice to have kernel
rpm -q kernel
if [[ $? != 0 ]]; then
    echo '*** kernel package not installed' >> /root/RESULT
fi

# the cri-o module should be just enabled, so the API package should *not*
# be installed

rpm -q cri-o
if [[ $? != 0 ]]; then
    echo '*** cri-o package for cri-o module not installed' >> /root/RESULT
fi

# next we will check if the module is seen as enabled/installed from the
# metadata/DNF point of view
dnf module list --enabled cri-o | grep cri-o || echo "*** cri-o module not marked as enabled" >> /root/RESULT
dnf module list --installed cri-o | grep cri-o || echo "*** cri-o module not marked as installed" >> /root/RESULT

# check the stream
dnf module list --installed cri-o | grep "default \[i\]" || echo "*** cri-o module default profile not marked as installed" >> /root/RESULT

# check the stream
dnf module list --installed cri-o | grep "1.11 \[e\]" || echo "*** cri-o stream id 1.11 not marked as enabled" >> /root/RESULT

%ksappend validation/success_if_result_empty.ks

%end
